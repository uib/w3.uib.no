<?php
/**
 * @file
 * Module file for uib_urlfilter
 */

/**
 * Implements hook_filter_info().
 *
 */
function uib_urlfilter_filter_info() {
  $filters['filter_uib_url'] = array(
    'title' => t('Remove protocol and uib domain from inline urls'),
    'description' => t('Initial http(s) and domain are removed from urls if the domain is w3.uib.no.'),
    'prepare callback' => '_uib_urlfilter_filter_prepare',
    'process callback' => '_uib_urlfilter_filter_process',
    'tips callback' => '_uib_urlfilter_filter_tips',
  );
  return $filters;
}

/**
 * prepare callback.
 *
 */
function _uib_urlfilter_filter_prepare($text, $filter) {
  return $text; // do not prepare
}

/**
 * process callback.
 *
 * Perform the filtering.
 */
function _uib_urlfilter_filter_process($text, $filter) {
  // Recode markup
  return _uib_urlfilter__replace($text);
}

/**
 * Filter tips callback for time filter.
 *
 */
function _uib_urlfilter_filter_tips($filter, $format, $long = FALSE) {
  return t('http(s)://w3.uib.no is removed from inline urls.');
}

/**
 * Remove w3.uib.no from url
 */
function _uib_urlfilter__replace($html_text) {
  return preg_replace('/https?:\/\/w3\.uib\.no\/?/', '/', $html_text);
}

/**
 * Implements hook_field_formatter_info().
 */
function uib_urlfilter_field_formatter_info() {
  return array(
    'uiblink_formatter' => array(
      'label' => t('UiB link'),
      'field types' => array('link_field'),
      'multiple values' => FIELD_BEHAVIOR_DEFAULT,
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function uib_urlfilter_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  if ($display['type'] == 'uiblink_formatter') {
    $elements = array();
    foreach ($items as $delta => $item) {
      $item['url'] = urldecode(_uib_urlfilter__replace($item['url']));
      $is_internal = $item['url'][0] == '/' ? TRUE : FALSE;
      $url = field_view_value($entity_type, $entity, $field['field_name'], $item);
      $url = render($url);
      if ($is_internal) {
        $url = _uib_urlfilter_fix_language($url);
      }
      $elements[$delta]['#markup'] = $url; // Assign it to the #markup of the element
    }
    return $elements;
  }
}

/**
 * Attempts to fix the language indicators in the url
 */
function _uib_urlfilter_fix_language($url) {
  static $installed_languages;
  if (empty($installed_languages)) {
    $installed_languages = language_list('language');
  }
  $lang = array_keys($installed_languages);
  $no_language = array(
    'sites',
    );
  $url = explode('/', $url);
  if (in_array($url[1], $lang)) {
    if (in_array($url[2], $lang)) {
      array_splice($url, 1, 1);
    }
    if (in_array($url[2], $no_language)) {
      array_splice($url, 1, 1);
    }
  }
  $url = implode('/', $url);
  return $url;
}
