<?php
/**
 * @file
 * Module file for uib_h2tabs
 */

/**
 * Implements hook_filter_info().
 *
  */
function uib_h2tabs_filter_info() {
  $filters['filter_h2'] = array(
    'title' => t('h2 to tabs in articles'),
    'description' => t('Headers of type &lt;h2&gt; will be replaced with tabs.'),
    'prepare callback' => '_uib_h2tabs_filter_h2_prepare',
    'process callback' => '_uib_h2tabs_filter_h2_process',
    'tips callback' => '_uib_h2tabs_filter_h2_tips',
  );
  return $filters;
}

/**
 * prepare callback.
 *
 */
function _uib_h2tabs_filter_h2_prepare($text, $filter) {
  return $text; // do not prepare
}

/**
 * process callback.
 *
 * do the real filtering.
 */
function _uib_h2tabs_filter_h2_process($text, $filter) {
  // Recode markup
  $h2s = array();
  $e = preg_match_all('/<h2.*?>(.*?)<\/h2>/', $text, $h2s, PREG_OFFSET_CAPTURE);
  if ($e > 0) {
    $hits_index = count($h2s[1]) -1;
    if ($hits_index == 0) { //Only one H2 - header, no need for accordion
      return $text;
    }
    // Tabs contents
    $tabs_contents = '';
    for ($i = $hits_index; $i >= 0; $i--) { // loop backwards through hits
      $id = _uib_h2tabs__generate_id($h2s[1][$i][0]);
      $h2 = $h2s[0][$i][0]; // The whole regex match, incl. <h2>
      $add_markup = "<div id=\"$id\">
      ";
      $add_markup .= $h2;
      // Use the content of the h2, i.e. the contents of the first captured pattern
      $pos_match = $h2s[0][$i][1]; // position of match in text
      $add_markup .= "<div>";
      $add_markup .= substr($text, $pos_match + strlen($h2));
      $add_markup .= "</div>";
      $text = substr($text, 0, $pos_match); // remove this portion from text
      $add_markup .= "
      </div>
      ";
      $tabs_contents = $add_markup . $tabs_contents;
    }
    return $text . "
      <div class=\"uib-tabs-container\">
      <div class=\"tabs-content\">" .
      $tabs_contents . "
      </div>
      </div>";
  }
  return $text;
}

/**
 * Filter tips callback for time filter.
 *
 */
function _uib_h2tabs_filter_h2_tips($filter, $format, $long = FALSE) {
  return t('Multiple <em>&lt;h2&gt;</em>\'s are replaced with accordion-'
    . 'functionality.');
}

function _uib_h2tabs__generate_id($h2) {
  $h2 = strip_tags($h2);
  $h2 = strtolower($h2);
  $h2 = preg_replace('/[^a-z0-9]+/', '-', $h2);
  return $h2;
}
