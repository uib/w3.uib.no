<?php

/**
 * Implements hook_menu_breadcrumb_alter().
 */
function uib_breadcrumb_menu_breadcrumb_alter(&$active_trail, $item) {
  if (path_is_admin(current_path())) {
    return;
  }
  $paths_without_areas = array(
    'user/%',
    'calendar',
    'search',
  );
  $current_area = uib_area__get_current();
  if (!$current_area && (!in_array($item['path'], $paths_without_areas))) {
    return;
  }
  global $language;
  $lang = $language->language;
  $uib_active_trail = array();
  $uib_active_trail[0] = array_shift($active_trail);
  $uib_active_trail[0]['title'] = 'UiB';
  $belongs_to = __uib_get_belongs_to($current_area);
  if ($current_area) {
    foreach ($belongs_to as $key => $bt) {
      if (count($belongs_to) > 2) {
        if ($key == 0) {
          $bt->title = strtoupper(drupal_get_path_alias('node/' . $bt->nid));
        }
        if ($key == 1) {
          if (!isset($item['page_arguments'][0]->type) || @$item['page_arguments'][0]->type != 'area') {
            $bt->title = strtoupper(drupal_get_path_alias('node/' . $bt->nid));
          }
        }
      }
      if (count($belongs_to) > 1) {
        if ($key == 0) {
          if (!isset($item['page_arguments'][0]->type) || @$item['page_arguments'][0]->type != 'area') {
            $bt->title = strtoupper(drupal_get_path_alias('node/' . $bt->nid));
          }
        }
      }
      $uib_active_trail[] = array(
        'title' => $bt->title,
        'href' => 'node/' . $bt->nid,
        'link_path' => '',
        'localized_options' => array(),
        'type' => 0,
      );
    }
  }
  if (isset($item['page_arguments'][0]->type)) {
    switch ($item['page_arguments'][0]->type) {
      case 'area':
        $uib_active_trail[] = array(
          'title' => $item['page_arguments'][0]->title,
          'href' => 'node/' . $item['page_arguments'][0]->nid,
          'link_path' => '',
          'localized_options' => array(),
          'type' => 0,
        );
        break;
      case 'uib_article':
        switch ($item['page_arguments'][0]->field_uib_article_type['und'][0]['value']) {
          case 'news':
            $uib_active_trail[] = array(
              'title' => t('News archive'),
              'href' => $uib_active_trail[count($uib_active_trail)-1]['href'] . '/news-archive',
              'link_path' => '',
              'localized_options' => array(),
              'type' => 0,
            );
            $uib_active_trail[] = end($active_trail);
            break;
          case 'feature_article':
            $uib_active_trail[] = end($active_trail);
            break;
          case 'infopage':
            $current_path = current_path();
            $active_trail_end = end($active_trail);
            $active_trail_end_area_nid = substr($active_trail_end['menu_name'],10);
            $current_area_menu = menu_tree_all_data('menu-area-' . $current_area->nid);
            $current_area_menu_ids = __uib_get_menu_item_ids($current_area_menu);
            if ($active_trail_end['link_path'] == $current_path && $active_trail_end_area_nid == $current_area->nid) {
              $uib_active_trail = array_merge($uib_active_trail, $active_trail);
            }
            else {
              $uib_active_trail[] = end($active_trail);
            }
            break;
          case 'event':
            $uib_active_trail[] = array(
              'title' => t('Calendar'),
              'href' => $uib_active_trail[count($uib_active_trail)-1]['href'] . '/calendar',
              'link_path' => '',
              'localized_options' => array(),
              'type' => 0,
            );
            $uib_active_trail[] = array(
              'title' => $item['page_arguments'][0]->title,
              'href' => 'node/' . $item['page_arguments'][0]->nid,
              'link_path' => '',
              'localized_options' => array(),
              'type' => 0,
            );
            break;
        }
        $uib_active_trail[] = array_pop($active_trail);
        break;
      case 'uib_study':
        unset($uib_active_trail[1]);
        $study_type = $item['page_arguments'][0]->field_uib_study_type['und'][0]['value'];
        $study_category = '';
        $courses_view_page_nid = variable_get('uib_courses_nid', 87343);
        $exchanges_view_page_nid = variable_get('uib_exchanges_nid', 87341);
        $programmes_view_page_nid = variable_get('uib_programmes_nid', 87342);

        $course_for_exchange_students = FALSE;
        $intgrad = FALSE;
        if (!empty($item['page_arguments'][0]->field_uib_study_category)) {
          $study_category = $item['page_arguments'][0]->field_uib_study_category['und'][0]['value'];
        }
        if (!empty($item['page_arguments'][0]->field_uib_study_label)) {
          foreach ($item['page_arguments'][0]->field_uib_study_label['und'] as $value) {
            if ($value['target_id'] == 40) $course_for_exchange_students = TRUE;
            if ($value['target_id'] == 41) $intgrad = TRUE;
          }
        }
        if ($study_type == 'course') {
          $study_type_title = t('Course');
          if ($study_category != 'evu') {
            if ($course_for_exchange_students) {
              $study_type_title = t('Exchange courses');
              $study_type_href = 'node/87344';
            }
            else {
              $study_type_href = "node/$courses_view_page_nid";
            }
          }
          else {
            $study_type_href ='utdanning/evu/courses';
          }
        }
        elseif ($study_type == 'exchange') {
          if (in_array($study_category, array('mou', 'forskningsavtale'))) {
            $study_type_title = t('Bilateral agreement');
            $study_type_href = "node/102270";
          }
          else {
            $study_type_title = t('Exchange agreement');
            $study_type_href = "node/$exchanges_view_page_nid";
          }
        }
        else {
          if ($intgrad) {
            $study_type_title = t('International programmes');
            $study_type_href = 'node/50057';
          }
          else {
            $study_type_title = t('Studies');
            $study_type_href = 'studies';
          }
        }
        $uib_active_trail[] = array(
          'title' => $study_type_title,
          'href' => $study_type_href,
          'link_path' => '',
          'localized_options' => array(),
          'type' => 0,
        );
        if ($study_category == 'specialization') {
          $parent_nid = $item['page_arguments'][0]->field_uib_study_part_of['und'][0]['target_id'];
          $parent = node_load($parent_nid);
          $uib_active_trail[] = array(
            'title' => $parent->field_uib_study_title[$lang][0]['value'],
            'href' => 'node/' . $parent_nid,
            'link_path' => '',
            'localized_options' => array(),
            'type' => 0,
          );
        }
        $uib_active_trail[] = array(
          'title' => $item['page_arguments'][0]->field_uib_study_title[$lang][0]['value'],
          'href' => 'node/' . $item['page_arguments'][0]->nid,
          'link_path' => '',
          'localized_options' => array(),
          'type' => 0,
        );
        $uib_active_trail[] = array_pop($active_trail);
        break;
      case 'uib_views_page':
        unset($uib_active_trail[1]);
        $courses_view_page_nid = variable_get('uib_courses_nid', 87343);
        $exchanges_view_page_nid = variable_get('uib_exchanges_nid', 87341);
        $programmes_view_page_nid = variable_get('uib_programmes_nid', 87342);
        if ($item['page_arguments'][0]->nid == $courses_view_page_nid) {
          $title = t('Course');
        }
        elseif ($item['page_arguments'][0]->nid == $programmes_view_page_nid) {
          $title = t('Study programme');
        }
        elseif ($item['page_arguments'][0]->nid == $exchanges_view_page_nid) {
          $title = t('Exchange agreement');
        }
        $uib_active_trail[] = array(
          'title' => $title,
          'href' => '',
          'localized_options' => array(),
        );
        break;
      case 'uib_market':
        $uib_active_trail[] = array(
          'title' => t('Internal market'),
          'href' => 'foremployees/market',
          'link_path' => '',
          'localized_options' => array(),
          'type' => 0,
        );
        break;
    }
  }
  else {
    switch($item['path']) {
      case 'node/%/news-archive':
        $uib_active_trail = array();
        break;
      case 'calendar':
        $uib_active_trail = array();
        break;
      case 'search':
        $uib_active_trail = array();
        break;
      case 'node/%/calendar':
        $title = $lang == 'en' ? 'Calendar' : 'Kalender';
        $uib_active_trail[] = array(
          'title' => $title,
          'href' => '',
          'localized_options' => array(),
        );
        break;
      case 'utdanning/evu/courses':
        unset($uib_active_trail[1]);
        $uib_active_trail[] = array(
          'title' => t('Course'),
          'href' => '',
          'localized_options' => array(),
        );
        break;
      case 'user/%':
        $title = $lang == 'en' ? 'persons' : 'personer';
        $uib_active_trail[1] = array(
          'title' => ucfirst($title),
          'href' => $title,
          'link_path' => '',
          'localized_options' => array(),
          'type' => 0,
        );
        $name = $item['page_arguments'][0]->field_uib_first_name['und'][0]['safe_value'];
        $name .= ' ';
        $name .= $item['page_arguments'][0]->field_uib_last_name['und'][0]['safe_value'];
        $uib_active_trail[] = array(
          'title' => $name,
          'href' => '',
          'link_path' => '',
          'localized_options' => array(),
          'type' => 0,
        );
        break;
      case 'node/%/study-programmes':
        $title = $lang == 'en' ? 'Study programmes' : 'Studieprogram';
        $uib_active_trail[] = array(
          'title' => $title,
          'href' => '',
          'link_path' => '',
          'localized_options' => array(),
          'type' => 0,
        );
        break;
      case 'node/%/courses':
        $title = $lang == 'en' ? 'Courses' : 'Emner';
        $uib_active_trail[] = array(
          'title' => $title,
          'href' => '',
          'link_path' => '',
          'localized_options' => array(),
          'type' => 0,
        );
        break;
    }
  }
  $active_trail = $uib_active_trail;
}

/**
 * Implements hook_page_alter().
 */
function uib_breadcrumb_page_alter(&$page) {
  if (!path_is_admin(current_path())) {
    if (arg(0) == 'taxonomy' && arg(1) == 'term' && is_numeric(arg(2))) {
      $home = 'UiB';
      $breadcrumb = array();
      $breadcrumb[] = l($home, '<front>');
      $current_area = uib_area__get_current();
      if ($current_area)
        $breadcrumb[] = l($current_area->title, 'node/' . $current_area->nid);
      $parent_term = taxonomy_get_parents(arg(2));
      if ($parent_term) {
        $parent_term_keys = array_keys($parent_term);
        global $language;
        $lang = $language->language;
        if (isset($parent_term[$parent_term_keys[0]]->field_uib_term_title[$lang])) {
          $parent_term_title = $parent_term[$parent_term_keys[0]]->field_uib_term_title[$lang][0]['safe_value'];
          $breadcrumb[] = l($parent_term_title, 'taxonomy/term/' . $parent_term_keys[0]);
        }
      }
      drupal_set_breadcrumb($breadcrumb);
    }
  }
}

/**
 * Function aiming to find a menu item related to an infopage
 * @param int $nid
 * @param $menu_ids
 * @return string
 */
function __uib_breadcrumb__get_related_menu_item($nid, $menu_ids, $visited=array()) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'uib_article')
    ->fieldCondition('field_uib_article_type', 'value', array('infopage', 'news'), 'IN')
    ->fieldCondition('field_uib_relation', 'target_id', $nid, '=');
  $result = $query->execute();
  $return = FALSE;
  if (!empty($result['node'])) {
    $related_ids = array_keys($result['node']);
    foreach ($menu_ids as $key => $id) {
      if (in_array($id, $related_ids)) {
        $return = $id;
      }
      else {
        if (in_array($id, $visited)) continue;
        $visited[] = $id;
        $return =  __uib_breadcrumb__get_related_menu_item($id, $menu_ids, $visited);
      }
      if ($return) break;
    }
  }
  return $return;
}

/**
 * Recursive function aiming to get the part of the breadcrumb consisting
 * of related content.
 *
 * @param int $nid
 * @param array $crumbs
 * @param node $current_area
 * @param array $menu_ids
 *
 * @return array
 */
function __uib_get_breadcrumb($nid, $crumbs=array(), $current_area, $menu_ids) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'uib_article')
    ->fieldCondition('field_uib_relation', 'target_id', $nid, '=')
    ->fieldCondition('field_uib_article_type', 'value', 'infopage', '=');
  $result = $query->execute();
  if (!empty($result['node'])) {
    $ids = array_keys($result['node']);
    $parents = entity_load('node', $ids);
    foreach ($ids as $key => $id) {
      if (in_array($id, $menu_ids)) {
        $parent = $parents[$id];
        $crumbs[] = __uib_get_breadcrumb_item($parent);
        return $crumbs;
      }
    }
    foreach ($parents as $parent) {
      if ($parent->field_uib_area['und'][0]['target_id'] == $current_area) {
        $item = __uib_get_breadcrumb_item($parent);
        if (!in_array($item, $crumbs)) {
          $crumbs[] = $item;
          $crumbs = __uib_get_breadcrumb($parent->nid, $crumbs, $current_area, $menu_ids);
        }
      }
    }
  }
  return $crumbs;
}

/**
 * Getting the parent link id for items in the specified menu.
 *
 * @param string $path
 * @param string $menu_name
 *
 * @return int
 */
function __uib_get_plid($path, $menu_name) {
  $plid = db_select('menu_links' , 'ml')
  ->condition('ml.link_path' , $path)
  ->condition('ml.menu_name',$menu_name)
  ->fields('ml' , array('plid'))
  ->execute()
  ->fetchField();
  return $plid;
}

/**
 * Getting a links parent item.
 *
 * @param int $mlid
 *
 * @return array
 */
function __uib_get_parent_item($mlid) {
  $result = db_select('menu_links', 'ml')
   ->condition('ml.mlid', $mlid)
   ->fields('ml', array('link_path', 'link_title'))
   ->execute()
   ->fetchAssoc();
  return $result;
}

/**
 * Getting the ids of links in an area menu
 *
 * @param array $menu
 *
 * @return array
 */
function __uib_get_menu_item_ids($menu) {
  $ids = array();
  foreach ($menu as $key => $item) {
    if ($item['link']['link_path'] != 'http:#' && !$item['link']['hidden']) {
      $id = explode('/', $item['link']['link_path']);
      if (count($id) < 3) {
        $ids[] = $id[1];
      }
    }
    foreach ($item['below'] as $k => $ml) {
      $id = explode('/', $ml['link']['link_path']);
      if (count($id) < 3) {
        $ids[] = $id[1];
      }
    }
  }
  return $ids;
}

function __uib_get_breadcrumb_item($object) {
  return array(
    'title' => $object->title,
    'href' => 'node/' . $object->nid,
    'link_path' => '',
    'localized_options' => array(),
    'type' => 0,
  );
}

function __uib_get_belongs_to($current_area) {
  $belongs_to = array($current_area);
  if (!empty($current_area->field_uib_area_parents)) {
    foreach ($current_area->field_uib_area_parents['und'] as $key => $value) {
      $belongs_to[] = node_load($value['target_id']);
    }
  }
  return array_reverse($belongs_to);
}
